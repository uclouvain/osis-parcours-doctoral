openapi: 3.0.3
info:
  title: Parcours Doctoral API
  version: 1.0.11
  description: This API delivers data for the Parcours Doctoral project.
  contact:
    name: UCLouvain - OSIS
    url: https://github.com/uclouvain/osis
paths:
  /autocomplete/person:
    get:
      operationId: autocomplete_person_list
      description: Autocomplete person
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: search
        required: true
        in: query
        description: The term to search the persons on (first or last name, or global
          id)
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - autocomplete
      security:
      - tokenAuth: []
      - Token: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPersonList'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /autocomplete/tutor:
    get:
      operationId: autocomplete_tutor_list
      description: Autocomplete tutors
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: search
        required: true
        in: query
        description: The term to search the persons on (first or last name, or global
          id)
        schema:
          type: string
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - autocomplete
      security:
      - tokenAuth: []
      - Token: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTutorList'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /doctorate/{uuid}:
    get:
      operationId: doctorate_retrieve
      description: Get the parcours doctoral
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - doctorate
      security:
      - tokenAuth: []
      - Token: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParcoursDoctoralDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /doctorate/{uuid}/assessment-enrollment:
    get:
      operationId: list_inscription_evaluation_dtos
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - doctorate
      security:
      - tokenAuth: []
      - Token: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DoctoralTrainingActivity'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /doctorate/{uuid}/assessment-enrollment/{enrollment_uuid}:
    get:
      operationId: retrieve_inscription_evaluation_dto
      parameters:
      - in: path
        name: enrollment_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - doctorate
      security:
      - tokenAuth: []
      - Token: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DoctoralTrainingActivity'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /doctorate/{uuid}/complementary-training:
    get:
      operationId: list_complementary_training
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - doctorate
      security:
      - tokenAuth: []
      - Token: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DoctoralTrainingActivity'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /doctorate/{uuid}/confirmation:
    get:
      operationId: retrieve_confirmation_papers
      description: Get the confirmation papers related to the doctorate
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - doctorate
      security:
      - tokenAuth: []
      - Token: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConfirmationPaperDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /doctorate/{uuid}/confirmation/last:
    get:
      operationId: retrieve_last_confirmation_paper
      description: Get the last confirmation paper related to the doctorate
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - doctorate
      security:
      - tokenAuth: []
      - Token: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfirmationPaperDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      operationId: submit_confirmation_paper_extension_request
      description: Submit the extension request of the last confirmation paper of
        a doctorate
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - doctorate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitConfirmationPaperExtensionRequestCommand'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParcoursDoctoralIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      operationId: submit_confirmation_paper
      description: Submit the last confirmation paper related to a doctorate
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - doctorate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitConfirmationPaperCommand'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParcoursDoctoralIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /doctorate/{uuid}/confirmation/last/canvas:
    get:
      operationId: retrieve_last_confirmation_paper_canvas
      description: Get the last confirmation paper canvas related to the doctorate
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - doctorate
      security:
      - tokenAuth: []
      - Token: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfirmationPaperCanvas'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /doctorate/{uuid}/cotutelle:
    get:
      operationId: retrieve_cotutelle
      description: |-
        This method is only used to check the permission.
        We have to return some data as the schema expects a 200 status and the deserializer expects some data.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - doctorate
      security:
      - tokenAuth: []
      - Token: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      operationId: update_cotutelle
      description: Set the cotutelle of the PhD.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - doctorate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifierCotutelleCommand'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParcoursDoctoralIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /doctorate/{uuid}/course-enrollment:
    get:
      operationId: list_course_enrollment
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - doctorate
      security:
      - tokenAuth: []
      - Token: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DoctoralTrainingActivity'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /doctorate/{uuid}/doctoral-training:
    get:
      operationId: list_doctoral_training
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - doctorate
      security:
      - tokenAuth: []
      - Token: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DoctoralTrainingActivity'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      operationId: create_doctoral_training
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - doctorate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DoctoralTrainingActivity'
      security:
      - tokenAuth: []
      - Token: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctoralTrainingActivity'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /doctorate/{uuid}/funding:
    get:
      operationId: retrieve_funding
      description: |-
        This method is only used to check the permission.
        We have to return some data as the schema expects a 200 status and the deserializer expects some data.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - doctorate
      security:
      - tokenAuth: []
      - Token: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      operationId: update_funding
      description: Edit the project
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - doctorate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifierFinancementCommand'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParcoursDoctoralIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /doctorate/{uuid}/jury/members:
    get:
      operationId: list_jury_members
      description: Get the members of a jury
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - doctorate
      security:
      - tokenAuth: []
      - Token: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MembreJuryDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      operationId: create_jury_members
      description: Add a new member to the jury
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - doctorate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AjouterMembreCommand'
      security:
      - tokenAuth: []
      - Token: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembreJuryIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /doctorate/{uuid}/jury/members/{member_uuid}:
    get:
      operationId: retrieve_jury_member
      description: Get the members of a jury
      parameters:
      - in: path
        name: member_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - doctorate
      security:
      - tokenAuth: []
      - Token: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembreJuryDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      operationId: update_jury_member
      description: Update a member of the jury
      parameters:
      - in: path
        name: member_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - doctorate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifierMembreCommand'
      security:
      - tokenAuth: []
      - Token: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JuryIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      operationId: update_role_jury_member
      description: Update the role of a member of the jury
      parameters:
      - in: path
        name: member_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - doctorate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedModifierRoleMembreCommand'
      security:
      - tokenAuth: []
      - Token: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JuryIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      operationId: remove_jury_member
      description: Remove a member
      parameters:
      - in: path
        name: member_uuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - doctorate
      security:
      - tokenAuth: []
      - Token: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /doctorate/{uuid}/jury/preparation:
    get:
      operationId: retrieve_jury_preparation
      description: Get the Jury of a doctorate
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - doctorate
      security:
      - tokenAuth: []
      - Token: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JuryDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      operationId: update_jury_preparation
      description: Update the jury preparation information
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - doctorate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifierJuryCommand'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JuryIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /doctorate/{uuid}/project:
    get:
      operationId: retrieve_project
      description: |-
        This method is only used to check the permission.
        We have to return some data as the schema expects a 200 status and the deserializer expects some data.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - doctorate
      security:
      - tokenAuth: []
      - Token: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /doctorate/{uuid}/supervised_confirmation:
    put:
      operationId: complete_confirmation_paper_by_promoter
      description: Complete the confirmation paper related to a parcours_doctoral
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - doctorate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteConfirmationPaperByPromoterCommand'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParcoursDoctoralIdentityDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /doctorate/{uuid}/supervision:
    get:
      operationId: retrieve_supervision
      description: Get the supervision group of the PhD
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - doctorate
      security:
      - tokenAuth: []
      - Token: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupervisionDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /doctorate/{uuid}/supervision/external/{token}:
    get:
      operationId: retrieve_external_doctorate_supervision
      description: Returns necessary info about the doctorate and the supervision.
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      tags:
      - doctorate
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalSupervisionDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /doctorate/{uuid}/supervision_canvas:
    get:
      operationId: retrieve_supervision_canvas
      description: Get the supervision group of the PhD
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - doctorate
      security:
      - tokenAuth: []
      - Token: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupervisionCanvas'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /doctorate/{uuid}/training-recap-pdf:
    get:
      operationId: training_recap_pdf
      description: Get the recap PDF of the doctoral training
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - doctorate
      security:
      - tokenAuth: []
      - Token: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingRecapPdf'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /doctorate/{uuid}/training/{activity_id}:
    get:
      operationId: retrieve_training
      parameters:
      - in: path
        name: activity_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - doctorate
      security:
      - tokenAuth: []
      - Token: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctoralTrainingActivity'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      operationId: update_training
      parameters:
      - in: path
        name: activity_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - doctorate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DoctoralTrainingActivity'
      security:
      - tokenAuth: []
      - Token: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctoralTrainingActivity'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      operationId: destroy_training
      parameters:
      - in: path
        name: activity_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - doctorate
      security:
      - tokenAuth: []
      - Token: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /doctorate/{uuid}/training/assent:
    post:
      operationId: assent_training
      description: Assent on a doctoral training activity.
      parameters:
      - in: query
        name: activity_id
        schema:
          type: string
        required: true
      - in: query
        name: approbation
        schema:
          type: boolean
        required: true
      - in: query
        name: commentaire
        schema:
          type: string
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - doctorate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DoctoralTrainingAssent'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctoralTrainingAssent'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /doctorate/{uuid}/training/config:
    get:
      operationId: retrieve_doctoral_training_config
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - doctorate
      security:
      - tokenAuth: []
      - Token: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctoralTrainingConfig'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /doctorate/{uuid}/training/submit:
    post:
      operationId: submit_training
      description: Submit doctoral training activities.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
      tags:
      - doctorate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DoctoralTrainingBatch'
        required: true
      security:
      - tokenAuth: []
      - Token: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctoralTrainingBatch'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /doctorate/dashboard:
    get:
      operationId: retrieve_dashboard
      description: Get the actions links for the application
      tags:
      - doctorate
      security:
      - tokenAuth: []
      - Token: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      parameters:
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
  /doctorate/list:
    get:
      operationId: list_doctorates
      tags:
      - doctorate
      security:
      - tokenAuth: []
      - Token: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ParcoursDoctoralRechercheDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      parameters:
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
  /doctorate/supervised-list:
    get:
      operationId: list_supervised_doctorates
      tags:
      - doctorate
      security:
      - tokenAuth: []
      - Token: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ParcoursDoctoralRechercheDTO'
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      parameters:
      - $ref: '#/components/parameters/Accept-Language'
      - $ref: '#/components/parameters/X-User-FirstName'
      - $ref: '#/components/parameters/X-User-LastName'
      - $ref: '#/components/parameters/X-User-Email'
      - $ref: '#/components/parameters/X-User-GlobalID'
components:
  schemas:
    ActionLink:
      type: object
      properties:
        error:
          type: string
        method:
          $ref: '#/components/schemas/MethodEnum'
        url:
          type: string
          format: uri
      oneOf:
      - required:
        - method
        - url
      - required:
        - error
    AjouterMembreCommand:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        matricule:
          type: string
        institution:
          type: string
        autre_institution:
          type: string
        pays:
          type: string
        nom:
          type: string
        prenom:
          type: string
        titre:
          type: string
        justification_non_docteur:
          type: string
        genre:
          type: string
        email:
          type: string
    BlankEnum:
      enum:
      - ''
    BourseDTONested:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        uuid:
          type: string
        nom_court:
          type: string
        nom_long:
          type: string
        type:
          type: string
      required:
      - nom_court
      - nom_long
      - type
      - uuid
    CampusDTONested:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        uuid:
          type: string
          format: uuid
        nom:
          type: string
        code_postal:
          type: string
        ville:
          type: string
        pays_iso_code:
          type: string
        nom_pays:
          type: string
        rue:
          type: string
        numero_rue:
          type: string
        boite_postale:
          type: string
        localisation:
          type: string
      required:
      - boite_postale
      - code_postal
      - localisation
      - nom
      - nom_pays
      - numero_rue
      - pays_iso_code
      - rue
      - uuid
      - ville
    CategoryEnum:
      enum:
      - CONFERENCE
      - COMMUNICATION
      - SEMINAR
      - PUBLICATION
      - SERVICE
      - RESIDENCY
      - VAE
      - COURSE
      - PAPER
      - UCL_COURSE
      type: string
      description: |-
        * `CONFERENCE` - Colloques et conférences
        * `COMMUNICATION` - Communications orale (hors conférence)
        * `SEMINAR` - Séminaires suivis
        * `PUBLICATION` - Publications
        * `SERVICE` - Services
        * `RESIDENCY` - Séjours de recherche
        * `VAE` - Valorisations des acquis de l'expérience
        * `COURSE` - Cours, formations et écoles
        * `PAPER` - Épreuves
        * `UCL_COURSE` - Cours UCL
    CommitteeEnum:
      enum:
      - 'YES'
      - 'NO'
      - NA
      type: string
      description: "* `` - \n* `YES` - YES\n* `NO` - NO\n* `NA` - NA"
    Communication:
      type: object
      description: |-
        Mixin for all activity serializers

        Aiming to
          - convert from fields to serializer
          - specify some fields' properties (e.g.: country and file uploads)
          - pass-through validation operations to the mapped Form.
      properties:
        object_type:
          type: string
        uuid:
          type: string
          readOnly: true
        category:
          $ref: '#/components/schemas/CategoryEnum'
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          readOnly: true
        context:
          $ref: '#/components/schemas/ContextEnum'
        parcours_doctoral:
          type: integer
          writeOnly: true
        reference_promoter_assent:
          type: boolean
          readOnly: true
          nullable: true
        reference_promoter_comment:
          type: string
          readOnly: true
        cdd_comment:
          type: string
          readOnly: true
        can_be_submitted:
          type: boolean
          readOnly: true
        type:
          type: string
        subtype:
          type: string
        title:
          type: string
        start_date:
          type: string
          format: date
          nullable: true
        is_online:
          type: boolean
          nullable: true
        country:
          type: string
          nullable: true
        city:
          type: string
        organizing_institution:
          type: string
        website:
          type: string
        subtitle:
          type: string
        summary:
          type: array
          items:
            type: string
        committee:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/CommitteeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        acceptation_proof:
          type: array
          items:
            type: string
        participating_proof:
          type: array
          items:
            type: string
        dial_reference:
          type: string
        ects:
          type: number
          format: double
          minimum: 0
          nullable: true
        comment:
          type: string
      required:
      - can_be_submitted
      - category
      - cdd_comment
      - city
      - comment
      - committee
      - context
      - country
      - dial_reference
      - ects
      - is_online
      - object_type
      - organizing_institution
      - reference_promoter_assent
      - reference_promoter_comment
      - start_date
      - status
      - subtitle
      - subtype
      - title
      - type
      - uuid
      - website
    CompleteConfirmationPaperByPromoterCommand:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        proces_verbal_ca:
          type: array
          items:
            type: string
        avis_renouvellement_mandat_recherche:
          type: array
          items:
            type: string
      required:
      - avis_renouvellement_mandat_recherche
      - proces_verbal_ca
    Conference:
      type: object
      description: |-
        Mixin for all activity serializers

        Aiming to
          - convert from fields to serializer
          - specify some fields' properties (e.g.: country and file uploads)
          - pass-through validation operations to the mapped Form.
      properties:
        object_type:
          type: string
        uuid:
          type: string
          readOnly: true
        category:
          $ref: '#/components/schemas/CategoryEnum'
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          readOnly: true
        context:
          $ref: '#/components/schemas/ContextEnum'
        parcours_doctoral:
          type: integer
          writeOnly: true
        reference_promoter_assent:
          type: boolean
          readOnly: true
          nullable: true
        reference_promoter_comment:
          type: string
          readOnly: true
        cdd_comment:
          type: string
          readOnly: true
        can_be_submitted:
          type: boolean
          readOnly: true
        type:
          type: string
        ects:
          type: number
          format: double
          minimum: 0
          nullable: true
        title:
          type: string
        start_date:
          type: string
          format: date
          nullable: true
        end_date:
          type: string
          format: date
          nullable: true
        participating_days:
          type: number
          format: double
          minimum: 0
          nullable: true
        hour_volume:
          type: string
        is_online:
          type: boolean
          nullable: true
        website:
          type: string
        country:
          type: string
          nullable: true
        city:
          type: string
        organizing_institution:
          type: string
        participating_proof:
          type: array
          items:
            type: string
        comment:
          type: string
      required:
      - can_be_submitted
      - category
      - cdd_comment
      - city
      - comment
      - context
      - country
      - ects
      - end_date
      - hour_volume
      - is_online
      - object_type
      - organizing_institution
      - participating_days
      - reference_promoter_assent
      - reference_promoter_comment
      - start_date
      - status
      - title
      - type
      - uuid
      - website
    ConferenceCommunication:
      type: object
      description: |-
        Mixin for all activity serializers

        Aiming to
          - convert from fields to serializer
          - specify some fields' properties (e.g.: country and file uploads)
          - pass-through validation operations to the mapped Form.
      properties:
        object_type:
          type: string
        uuid:
          type: string
          readOnly: true
        category:
          $ref: '#/components/schemas/CategoryEnum'
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          readOnly: true
        context:
          $ref: '#/components/schemas/ContextEnum'
        parcours_doctoral:
          type: integer
          writeOnly: true
        reference_promoter_assent:
          type: boolean
          readOnly: true
          nullable: true
        reference_promoter_comment:
          type: string
          readOnly: true
        cdd_comment:
          type: string
          readOnly: true
        can_be_submitted:
          type: boolean
          readOnly: true
        type:
          type: string
        ects:
          type: number
          format: double
          minimum: 0
          nullable: true
        title:
          type: string
        summary:
          type: array
          items:
            type: string
        committee:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/CommitteeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        acceptation_proof:
          type: array
          items:
            type: string
        dial_reference:
          type: string
        participating_proof:
          type: array
          items:
            type: string
        comment:
          type: string
        parent:
          type: string
      required:
      - can_be_submitted
      - category
      - cdd_comment
      - comment
      - committee
      - context
      - dial_reference
      - ects
      - object_type
      - parent
      - reference_promoter_assent
      - reference_promoter_comment
      - status
      - title
      - type
      - uuid
    ConferencePublication:
      type: object
      description: |-
        Mixin for all activity serializers

        Aiming to
          - convert from fields to serializer
          - specify some fields' properties (e.g.: country and file uploads)
          - pass-through validation operations to the mapped Form.
      properties:
        object_type:
          type: string
        uuid:
          type: string
          readOnly: true
        category:
          $ref: '#/components/schemas/CategoryEnum'
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          readOnly: true
        context:
          $ref: '#/components/schemas/ContextEnum'
        parcours_doctoral:
          type: integer
          writeOnly: true
        reference_promoter_assent:
          type: boolean
          readOnly: true
          nullable: true
        reference_promoter_comment:
          type: string
          readOnly: true
        cdd_comment:
          type: string
          readOnly: true
        can_be_submitted:
          type: boolean
          readOnly: true
        type:
          type: string
        ects:
          type: number
          format: double
          minimum: 0
          nullable: true
        title:
          type: string
        start_date:
          type: string
          format: date
          nullable: true
        publication_status:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/PublicationStatusEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        authors:
          type: string
        role:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/RoleEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        keywords:
          type: string
        summary:
          type: array
          items:
            type: string
        committee:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/CommitteeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        journal:
          type: string
        dial_reference:
          type: string
        acceptation_proof:
          type: array
          items:
            type: string
        comment:
          type: string
        parent:
          type: string
      required:
      - authors
      - can_be_submitted
      - category
      - cdd_comment
      - comment
      - committee
      - context
      - dial_reference
      - ects
      - journal
      - keywords
      - object_type
      - parent
      - publication_status
      - reference_promoter_assent
      - reference_promoter_comment
      - role
      - start_date
      - status
      - title
      - type
      - uuid
    ConfirmationPaperCanvas:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
      required:
      - uuid
    ConfirmationPaperDTO:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        uuid:
          type: string
        date_limite:
          type: string
          format: date
        date:
          type: string
          format: date
          nullable: true
        rapport_recherche:
          type: array
          items:
            type: string
        demande_prolongation:
          allOf:
          - $ref: '#/components/schemas/DemandeProlongationDTONested'
          nullable: true
        proces_verbal_ca:
          type: array
          items:
            type: string
        attestation_reussite:
          type: array
          items:
            type: string
        attestation_echec:
          type: array
          items:
            type: string
        canevas_proces_verbal_ca:
          type: array
          items:
            type: string
        avis_renouvellement_mandat_recherche:
          type: array
          items:
            type: string
      required:
      - attestation_echec
      - attestation_reussite
      - avis_renouvellement_mandat_recherche
      - canevas_proces_verbal_ca
      - date_limite
      - proces_verbal_ca
      - rapport_recherche
      - uuid
    ContextEnum:
      enum:
      - DOCTORAL_TRAINING
      - COMPLEMENTARY_TRAINING
      type: string
      description: |-
        * `DOCTORAL_TRAINING` - Formation doctorale
        * `COMPLEMENTARY_TRAINING` - Formation complémentaire
    CotutelleDTONested:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        cotutelle:
          type: boolean
          nullable: true
        motivation:
          type: string
        institution_fwb:
          type: boolean
          nullable: true
        institution:
          type: string
        autre_institution:
          type: boolean
          nullable: true
        autre_institution_nom:
          type: string
        autre_institution_adresse:
          type: string
        demande_ouverture:
          type: array
          items:
            type: string
        convention:
          type: array
          items:
            type: string
        autres_documents:
          type: array
          items:
            type: string
      required:
      - autre_institution_adresse
      - autre_institution_nom
      - autres_documents
      - convention
      - demande_ouverture
      - institution
      - motivation
    Course:
      type: object
      description: |-
        Mixin for all activity serializers

        Aiming to
          - convert from fields to serializer
          - specify some fields' properties (e.g.: country and file uploads)
          - pass-through validation operations to the mapped Form.
      properties:
        object_type:
          type: string
        uuid:
          type: string
          readOnly: true
        category:
          $ref: '#/components/schemas/CategoryEnum'
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          readOnly: true
        context:
          $ref: '#/components/schemas/ContextEnum'
        parcours_doctoral:
          type: integer
          writeOnly: true
        reference_promoter_assent:
          type: boolean
          readOnly: true
          nullable: true
        reference_promoter_comment:
          type: string
          readOnly: true
        cdd_comment:
          type: string
          readOnly: true
        can_be_submitted:
          type: boolean
          readOnly: true
        type:
          type: string
        title:
          type: string
        subtitle:
          type: string
        organizing_institution:
          type: string
        start_date:
          type: string
          format: date
          nullable: true
        end_date:
          type: string
          format: date
          nullable: true
        hour_volume:
          type: string
        authors:
          type: string
        is_online:
          type: boolean
          nullable: true
        mark:
          type: string
        ects:
          type: number
          format: double
          minimum: 0
          nullable: true
        participating_proof:
          type: array
          items:
            type: string
        comment:
          type: string
      required:
      - authors
      - can_be_submitted
      - category
      - cdd_comment
      - comment
      - context
      - ects
      - end_date
      - hour_volume
      - is_online
      - mark
      - object_type
      - organizing_institution
      - reference_promoter_assent
      - reference_promoter_comment
      - start_date
      - status
      - subtitle
      - title
      - type
      - uuid
    CreatablePapersTypesEnum:
      enum:
      - CONFIRMATION_PAPER
      - PRIVATE_DEFENSE
      - PUBLIC_DEFENSE
      type: string
      description: |-
        * `CONFIRMATION_PAPER` - Épreuve de confirmation
        * `PRIVATE_DEFENSE` - Défense privée
        * `PUBLIC_DEFENSE` - Soutenance publique
    Dashboard:
      type: object
      properties:
        links:
          allOf:
          - $ref: '#/components/schemas/ActionLink'
          readOnly: true
          default: {}
      required:
      - links
    DemandeProlongationDTONested:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        nouvelle_echeance:
          type: string
          format: date
        justification_succincte:
          type: string
        lettre_justification:
          type: array
          items:
            type: string
        avis_cdd:
          type: string
      required:
      - justification_succincte
      - lettre_justification
      - nouvelle_echeance
    DetailSignatureMembreCADTONested:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        membre_CA:
          $ref: '#/components/schemas/MembreCADTONested'
        statut:
          type: string
        date:
          type: string
          format: date-time
          nullable: true
        commentaire_externe:
          type: string
        commentaire_interne:
          type: string
        motif_refus:
          type: string
        pdf:
          type: array
          items:
            type: string
      required:
      - membre_CA
      - pdf
      - statut
    DetailSignaturePromoteurDTONested:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        promoteur:
          $ref: '#/components/schemas/PromoteurDTONested'
        statut:
          type: string
        date:
          type: string
          format: date-time
          nullable: true
        commentaire_externe:
          type: string
        commentaire_interne:
          type: string
        motif_refus:
          type: string
        pdf:
          type: array
          items:
            type: string
      required:
      - pdf
      - promoteur
      - statut
    DoctoralTrainingActivity:
      oneOf:
      - $ref: '#/components/schemas/Conference'
      - $ref: '#/components/schemas/ConferenceCommunication'
      - $ref: '#/components/schemas/ConferencePublication'
      - $ref: '#/components/schemas/Residency'
      - $ref: '#/components/schemas/ResidencyCommunication'
      - $ref: '#/components/schemas/Communication'
      - $ref: '#/components/schemas/Publication'
      - $ref: '#/components/schemas/Service'
      - $ref: '#/components/schemas/Seminar'
      - $ref: '#/components/schemas/SeminarCommunication'
      - $ref: '#/components/schemas/Valorisation'
      - $ref: '#/components/schemas/Course'
      - $ref: '#/components/schemas/Paper'
      - $ref: '#/components/schemas/UclCourse'
      discriminator:
        propertyName: object_type
        mapping:
          Conference: '#/components/schemas/Conference'
          ConferenceCommunication: '#/components/schemas/ConferenceCommunication'
          ConferencePublication: '#/components/schemas/ConferencePublication'
          Residency: '#/components/schemas/Residency'
          ResidencyCommunication: '#/components/schemas/ResidencyCommunication'
          Communication: '#/components/schemas/Communication'
          Publication: '#/components/schemas/Publication'
          Service: '#/components/schemas/Service'
          Seminar: '#/components/schemas/Seminar'
          SeminarCommunication: '#/components/schemas/SeminarCommunication'
          Valorisation: '#/components/schemas/Valorisation'
          Course: '#/components/schemas/Course'
          Paper: '#/components/schemas/Paper'
          UclCourse: '#/components/schemas/UclCourse'
    DoctoralTrainingAssent:
      type: object
      properties:
        approbation:
          type: boolean
        commentaire:
          type: string
      required:
      - approbation
      - commentaire
    DoctoralTrainingBatch:
      type: object
      properties:
        activity_uuids:
          type: array
          items:
            type: string
      required:
      - activity_uuids
    DoctoralTrainingConfig:
      type: object
      properties:
        creatable_papers_types:
          type: array
          items:
            $ref: '#/components/schemas/CreatablePapersTypesEnum'
          readOnly: true
        is_complementary_training_enabled:
          type: boolean
          title: Activer l'onglet Formation complémentaire
        category_labels:
          title: Libellés de catégories
        conference_types:
          title: Types d'activité pour la catégorie Conférence
        conference_publication_types:
          title: Types d'activité pour une communication dans la catégorie Conférence
        communication_types:
          title: Types d'activité pour la catégorie Communication orale (hors conférence)
        seminar_types:
          title: 'Types d''activité pour la catégorie Séminaire de recherche : assistance'
        publication_types:
          title: Types d'activité pour la catégorie Publications
        service_types:
          title: Types d'activité pour la catégorie Service institutionnel, didactique
            et d'expertise scientifique
        residency_types:
          title: Types d'activité pour la catégorie Séjour de perfectionnement de
            recherche
        course_types:
          title: Types d'activité pour la catégorie Cours
        complementary_course_types:
          title: Type de cours pour la formation complémentaire
      required:
      - creatable_papers_types
    EntiteGestionDTONested:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        sigle:
          type: string
        intitule:
          type: string
        lieu:
          type: string
        code_postal:
          type: string
        ville:
          type: string
        pays:
          type: string
        nom_pays:
          type: string
        numero_telephone:
          type: string
        code_secteur:
          type: string
        intitule_secteur:
          type: string
      required:
      - code_secteur
      - intitule
      - intitule_secteur
      - sigle
    ExternalParcoursDoctoralDTO:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        uuid:
          type: string
        reference:
          type: string
        formation:
          $ref: '#/components/schemas/FormationDTONested'
        matricule_doctorant:
          type: string
        projet:
          $ref: '#/components/schemas/ExternalProjetDTO'
        statut:
          type: string
      required:
      - formation
      - matricule_doctorant
      - projet
      - reference
      - statut
      - uuid
    ExternalProjetDTO:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        institut_these:
          type: string
          format: uuid
          nullable: true
        institution:
          type: string
        domaine_these:
          type: string
      required:
      - domaine_these
      - institution
    ExternalSupervisionDTO:
      type: object
      properties:
        parcours_doctoral:
          $ref: '#/components/schemas/ExternalParcoursDoctoralDTO'
        supervision:
          $ref: '#/components/schemas/SupervisionDTO'
      required:
      - parcours_doctoral
      - supervision
    FinancementDTONested:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        type:
          type: string
        type_contrat_travail:
          type: string
        eft:
          type: integer
          nullable: true
        bourse_recherche:
          allOf:
          - $ref: '#/components/schemas/BourseDTONested'
          nullable: true
        autre_bourse_recherche:
          type: string
        bourse_date_debut:
          type: string
          format: date
          nullable: true
        bourse_date_fin:
          type: string
          format: date
          nullable: true
        bourse_preuve:
          type: array
          items:
            type: string
        duree_prevue:
          type: integer
          nullable: true
        temps_consacre:
          type: integer
          nullable: true
        est_lie_fnrs_fria_fresh_csc:
          type: boolean
          nullable: true
        commentaire:
          type: string
      required:
      - autre_bourse_recherche
      - bourse_preuve
      - commentaire
      - type
      - type_contrat_travail
    FormationDTONested:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        sigle:
          type: string
        code:
          type: string
        annee:
          type: integer
        intitule:
          type: string
        intitule_fr:
          type: string
        intitule_en:
          type: string
        entite_gestion:
          $ref: '#/components/schemas/EntiteGestionDTONested'
        campus:
          allOf:
          - $ref: '#/components/schemas/CampusDTONested'
          nullable: true
        type:
          type: string
      required:
      - annee
      - code
      - entite_gestion
      - intitule
      - intitule_en
      - intitule_fr
      - sigle
      - type
    HourVolumeTypeEnum:
      enum:
      - HEURES
      - JOURS
      type: string
      description: "* `` - \n* `HEURES` - HEURES\n* `JOURS` - JOURS"
    JuryDTO:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        uuid:
          type: string
        titre_propose:
          type: string
        membres:
          type: array
          items:
            $ref: '#/components/schemas/MembreJuryDTONested'
        formule_defense:
          type: string
        date_indicative:
          type: string
          format: date
          nullable: true
        langue_redaction:
          type: string
        langue_soutenance:
          type: string
        commentaire:
          type: string
        situation_comptable:
          type: boolean
          nullable: true
        approbation_pdf:
          type: array
          items:
            type: string
      required:
      - approbation_pdf
      - commentaire
      - formule_defense
      - langue_redaction
      - langue_soutenance
      - membres
      - titre_propose
      - uuid
    JuryIdentityDTO:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
      required:
      - uuid
    MembreCADTONested:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        uuid:
          type: string
        matricule:
          type: string
        nom:
          type: string
        prenom:
          type: string
        email:
          type: string
        est_docteur:
          type: boolean
        institution:
          type: string
        ville:
          type: string
        code_pays:
          type: string
        pays:
          type: string
        est_externe:
          type: boolean
      required:
      - code_pays
      - email
      - est_docteur
      - est_externe
      - institution
      - nom
      - pays
      - prenom
      - uuid
      - ville
    MembreJuryDTO:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        uuid:
          type: string
        role:
          type: string
        est_promoteur:
          type: boolean
        matricule:
          type: string
        institution:
          type: string
        autre_institution:
          type: string
        pays:
          type: string
        nom:
          type: string
        prenom:
          type: string
        titre:
          type: string
        justification_non_docteur:
          type: string
        genre:
          type: string
        email:
          type: string
      required:
      - autre_institution
      - email
      - est_promoteur
      - genre
      - institution
      - justification_non_docteur
      - matricule
      - nom
      - pays
      - prenom
      - role
      - titre
      - uuid
    MembreJuryDTONested:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        uuid:
          type: string
        role:
          type: string
        est_promoteur:
          type: boolean
        matricule:
          type: string
        institution:
          type: string
        autre_institution:
          type: string
        pays:
          type: string
        nom:
          type: string
        prenom:
          type: string
        titre:
          type: string
        justification_non_docteur:
          type: string
        genre:
          type: string
        email:
          type: string
      required:
      - autre_institution
      - email
      - est_promoteur
      - genre
      - institution
      - justification_non_docteur
      - matricule
      - nom
      - pays
      - prenom
      - role
      - titre
      - uuid
    MembreJuryIdentityDTO:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
      required:
      - uuid
    MethodEnum:
      type: string
      enum:
      - DELETE
      - GET
      - PATCH
      - POST
      - PUT
    ModifierCotutelleCommand:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        motivation:
          type: string
          maxLength: 255
        institution_fwb:
          type: boolean
          nullable: true
        institution:
          type: string
          maxLength: 255
        autre_institution_nom:
          type: string
        autre_institution_adresse:
          type: string
        demande_ouverture:
          type: array
          items:
            type: string
        convention:
          type: array
          items:
            type: string
        autres_documents:
          type: array
          items:
            type: string
      required:
      - autres_documents
      - convention
      - demande_ouverture
    ModifierFinancementCommand:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        type:
          type: string
        type_contrat_travail:
          type: string
        eft:
          type: integer
          nullable: true
        bourse_recherche:
          type: string
        autre_bourse_recherche:
          type: string
        bourse_date_debut:
          type: string
          format: date
          nullable: true
        bourse_date_fin:
          type: string
          format: date
          nullable: true
        bourse_preuve:
          type: array
          items:
            type: string
        duree_prevue:
          type: integer
          nullable: true
        temps_consacre:
          type: integer
          nullable: true
        est_lie_fnrs_fria_fresh_csc:
          type: boolean
          nullable: true
        commentaire:
          type: string
      required:
      - bourse_preuve
    ModifierJuryCommand:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        titre_propose:
          type: string
        formule_defense:
          type: string
        date_indicative:
          type: string
          format: date
        langue_redaction:
          type: string
        langue_soutenance:
          type: string
        commentaire:
          type: string
      required:
      - commentaire
      - date_indicative
      - formule_defense
      - langue_redaction
      - langue_soutenance
      - titre_propose
    ModifierMembreCommand:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        matricule:
          type: string
        institution:
          type: string
        autre_institution:
          type: string
        pays:
          type: string
        nom:
          type: string
        prenom:
          type: string
        titre:
          type: string
        justification_non_docteur:
          type: string
        genre:
          type: string
        email:
          type: string
    NullEnum:
      enum:
      - null
    PaginatedPersonList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Person'
    PaginatedTutorList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Tutor'
    Paper:
      type: object
      description: |-
        Mixin for all activity serializers

        Aiming to
          - convert from fields to serializer
          - specify some fields' properties (e.g.: country and file uploads)
          - pass-through validation operations to the mapped Form.
      properties:
        object_type:
          type: string
        uuid:
          type: string
          readOnly: true
        category:
          $ref: '#/components/schemas/CategoryEnum'
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          readOnly: true
        context:
          $ref: '#/components/schemas/ContextEnum'
        parcours_doctoral:
          type: integer
          writeOnly: true
        reference_promoter_assent:
          type: boolean
          readOnly: true
          nullable: true
        reference_promoter_comment:
          type: string
          readOnly: true
        cdd_comment:
          type: string
          readOnly: true
        can_be_submitted:
          type: boolean
          readOnly: true
        type:
          $ref: '#/components/schemas/TypeEnum'
        ects:
          type: number
          format: double
          minimum: 0
          nullable: true
        comment:
          type: string
      required:
      - can_be_submitted
      - category
      - cdd_comment
      - comment
      - context
      - ects
      - object_type
      - reference_promoter_assent
      - reference_promoter_comment
      - status
      - type
      - uuid
    ParcoursDoctoralDTO:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        uuid:
          type: string
        uuid_admission:
          type: string
        type_admission:
          type: string
        reference:
          type: string
        statut:
          type: string
        date_changement_statut:
          type: string
          format: date-time
          nullable: true
        justification:
          type: string
        intitule_secteur_formation:
          type: string
        cree_le:
          type: string
          format: date-time
        formation:
          $ref: '#/components/schemas/FormationDTONested'
        projet:
          $ref: '#/components/schemas/ProjetDTONested'
        cotutelle:
          $ref: '#/components/schemas/CotutelleDTONested'
        financement:
          $ref: '#/components/schemas/FinancementDTONested'
        photo_identite_doctorant:
          type: array
          items:
            type: string
        matricule_doctorant:
          type: string
        noma_doctorant:
          type: string
        genre_doctorant:
          type: string
        prenom_doctorant:
          type: string
        date_naissance_doctorant:
          type: string
          format: date
        lieu_naissance_doctorant:
          type: string
        pays_naissance_doctorant:
          type: string
        nom_doctorant:
          type: string
        commission_proximite:
          type: string
        date_admission_par_cdd:
          type: string
          format: date-time
          nullable: true
        links:
          allOf:
          - $ref: '#/components/schemas/ActionLink'
          readOnly: true
          default: {}
      required:
      - commission_proximite
      - cotutelle
      - cree_le
      - date_naissance_doctorant
      - financement
      - formation
      - genre_doctorant
      - intitule_secteur_formation
      - lieu_naissance_doctorant
      - links
      - matricule_doctorant
      - nom_doctorant
      - noma_doctorant
      - pays_naissance_doctorant
      - photo_identite_doctorant
      - prenom_doctorant
      - projet
      - reference
      - statut
      - type_admission
      - uuid
      - uuid_admission
    ParcoursDoctoralIdentityDTO:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
      required:
      - uuid
    ParcoursDoctoralRechercheDTO:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        uuid:
          type: string
        reference:
          type: string
        statut:
          type: string
        formation:
          $ref: '#/components/schemas/FormationDTONested'
        matricule_doctorant:
          type: string
        genre_doctorant:
          type: string
        prenom_doctorant:
          type: string
        nom_doctorant:
          type: string
        cree_le:
          type: string
          format: date-time
        links:
          allOf:
          - $ref: '#/components/schemas/ActionLink'
          readOnly: true
          default: {}
      required:
      - cree_le
      - formation
      - genre_doctorant
      - links
      - matricule_doctorant
      - nom_doctorant
      - prenom_doctorant
      - reference
      - statut
      - uuid
    PatchedModifierRoleMembreCommand:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        role:
          type: string
    Person:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        global_id:
          type: string
          nullable: true
          maxLength: 10
    ProjetDTONested:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        titre:
          type: string
        resume:
          type: string
        langue_redaction_these:
          type: string
        nom_langue_redaction_these:
          type: string
        institut_these:
          type: string
          format: uuid
          nullable: true
        nom_institut_these:
          type: string
        sigle_institut_these:
          type: string
        lieu_these:
          type: string
        projet_doctoral_deja_commence:
          type: boolean
          nullable: true
        projet_doctoral_institution:
          type: string
        projet_doctoral_date_debut:
          type: string
          format: date
          nullable: true
        documents_projet:
          type: array
          items:
            type: string
        graphe_gantt:
          type: array
          items:
            type: string
        proposition_programme_doctoral:
          type: array
          items:
            type: string
        projet_formation_complementaire:
          type: array
          items:
            type: string
        lettres_recommandation:
          type: array
          items:
            type: string
        doctorat_deja_realise:
          type: string
        institution:
          type: string
        domaine_these:
          type: string
        date_soutenance:
          type: string
          format: date
          nullable: true
        raison_non_soutenue:
          type: string
      required:
      - doctorat_deja_realise
      - documents_projet
      - domaine_these
      - graphe_gantt
      - institution
      - langue_redaction_these
      - lettres_recommandation
      - lieu_these
      - nom_institut_these
      - nom_langue_redaction_these
      - projet_doctoral_institution
      - projet_formation_complementaire
      - proposition_programme_doctoral
      - raison_non_soutenue
      - resume
      - sigle_institut_these
      - titre
    PromoteurDTONested:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        uuid:
          type: string
        matricule:
          type: string
        nom:
          type: string
        prenom:
          type: string
        email:
          type: string
        est_docteur:
          type: boolean
        institution:
          type: string
        ville:
          type: string
        code_pays:
          type: string
        pays:
          type: string
        est_externe:
          type: boolean
      required:
      - code_pays
      - email
      - est_docteur
      - est_externe
      - institution
      - nom
      - pays
      - prenom
      - uuid
      - ville
    Publication:
      type: object
      description: |-
        Mixin for all activity serializers

        Aiming to
          - convert from fields to serializer
          - specify some fields' properties (e.g.: country and file uploads)
          - pass-through validation operations to the mapped Form.
      properties:
        object_type:
          type: string
        uuid:
          type: string
          readOnly: true
        category:
          $ref: '#/components/schemas/CategoryEnum'
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          readOnly: true
        context:
          $ref: '#/components/schemas/ContextEnum'
        parcours_doctoral:
          type: integer
          writeOnly: true
        reference_promoter_assent:
          type: boolean
          readOnly: true
          nullable: true
        reference_promoter_comment:
          type: string
          readOnly: true
        cdd_comment:
          type: string
          readOnly: true
        can_be_submitted:
          type: boolean
          readOnly: true
        type:
          type: string
        is_publication_national:
          type: boolean
          nullable: true
        title:
          type: string
        start_date:
          type: string
          format: date
          nullable: true
        authors:
          type: string
        role:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/RoleEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        keywords:
          type: string
        summary:
          type: array
          items:
            type: string
        journal:
          type: string
        publication_status:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/PublicationStatusEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        with_reading_committee:
          type: boolean
          nullable: true
        dial_reference:
          type: string
        ects:
          type: number
          format: double
          minimum: 0
          nullable: true
        acceptation_proof:
          type: array
          items:
            type: string
        comment:
          type: string
      required:
      - authors
      - can_be_submitted
      - category
      - cdd_comment
      - comment
      - context
      - dial_reference
      - ects
      - is_publication_national
      - journal
      - keywords
      - object_type
      - publication_status
      - reference_promoter_assent
      - reference_promoter_comment
      - role
      - start_date
      - status
      - title
      - type
      - uuid
      - with_reading_committee
    PublicationStatusEnum:
      enum:
      - UNSUBMITTED
      - SUBMITTED
      - IN_REVIEW
      - DEPOSITED
      - ACCEPTED
      - PUBLISHED
      type: string
      description: "* `` - \n* `UNSUBMITTED` - UNSUBMITTED\n* `SUBMITTED` - SUBMITTED\n\
        * `IN_REVIEW` - IN_REVIEW\n* `DEPOSITED` - DEPOSITED\n* `ACCEPTED` - ACCEPTED\n\
        * `PUBLISHED` - PUBLISHED"
    Residency:
      type: object
      description: |-
        Mixin for all activity serializers

        Aiming to
          - convert from fields to serializer
          - specify some fields' properties (e.g.: country and file uploads)
          - pass-through validation operations to the mapped Form.
      properties:
        object_type:
          type: string
        uuid:
          type: string
          readOnly: true
        category:
          $ref: '#/components/schemas/CategoryEnum'
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          readOnly: true
        context:
          $ref: '#/components/schemas/ContextEnum'
        parcours_doctoral:
          type: integer
          writeOnly: true
        reference_promoter_assent:
          type: boolean
          readOnly: true
          nullable: true
        reference_promoter_comment:
          type: string
          readOnly: true
        cdd_comment:
          type: string
          readOnly: true
        can_be_submitted:
          type: boolean
          readOnly: true
        type:
          type: string
        ects:
          type: number
          format: double
          minimum: 0
          nullable: true
        subtitle:
          type: string
        start_date:
          type: string
          format: date
          nullable: true
        end_date:
          type: string
          format: date
          nullable: true
        country:
          type: string
          nullable: true
        city:
          type: string
        organizing_institution:
          type: string
        participating_proof:
          type: array
          items:
            type: string
        comment:
          type: string
      required:
      - can_be_submitted
      - category
      - cdd_comment
      - city
      - comment
      - context
      - country
      - ects
      - end_date
      - object_type
      - organizing_institution
      - reference_promoter_assent
      - reference_promoter_comment
      - start_date
      - status
      - subtitle
      - type
      - uuid
    ResidencyCommunication:
      type: object
      description: |-
        Mixin for all activity serializers

        Aiming to
          - convert from fields to serializer
          - specify some fields' properties (e.g.: country and file uploads)
          - pass-through validation operations to the mapped Form.
      properties:
        object_type:
          type: string
        uuid:
          type: string
          readOnly: true
        category:
          $ref: '#/components/schemas/CategoryEnum'
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          readOnly: true
        context:
          $ref: '#/components/schemas/ContextEnum'
        parcours_doctoral:
          type: integer
          writeOnly: true
        reference_promoter_assent:
          type: boolean
          readOnly: true
          nullable: true
        reference_promoter_comment:
          type: string
          readOnly: true
        cdd_comment:
          type: string
          readOnly: true
        can_be_submitted:
          type: boolean
          readOnly: true
        type:
          type: string
        subtype:
          type: string
        title:
          type: string
        start_date:
          type: string
          format: date
          nullable: true
        is_online:
          type: boolean
          nullable: true
        organizing_institution:
          type: string
        website:
          type: string
        subtitle:
          type: string
        ects:
          type: number
          format: double
          minimum: 0
          nullable: true
        summary:
          type: array
          items:
            type: string
        participating_proof:
          type: array
          items:
            type: string
        comment:
          type: string
        parent:
          type: string
      required:
      - can_be_submitted
      - category
      - cdd_comment
      - comment
      - context
      - ects
      - is_online
      - object_type
      - organizing_institution
      - parent
      - reference_promoter_assent
      - reference_promoter_comment
      - start_date
      - status
      - subtitle
      - subtype
      - title
      - type
      - uuid
      - website
    RoleEnum:
      enum:
      - AUTERTRICE_UNIQUE
      - COAUTEURTRICE
      - PREMIER_AUTEURTRICE
      - DEUXIEME_AUTEURTRICE
      - EDITEURTRICE
      - COEDITEURTRICE
      type: string
      description: "* `` - \n* `AUTERTRICE_UNIQUE` - AUTERTRICE_UNIQUE\n* `COAUTEURTRICE`\
        \ - COAUTEURTRICE\n* `PREMIER_AUTEURTRICE` - PREMIER_AUTEURTRICE\n* `DEUXIEME_AUTEURTRICE`\
        \ - DEUXIEME_AUTEURTRICE\n* `EDITEURTRICE` - EDITEURTRICE\n* `COEDITEURTRICE`\
        \ - COEDITEURTRICE"
    Seminar:
      type: object
      description: |-
        Mixin for all activity serializers

        Aiming to
          - convert from fields to serializer
          - specify some fields' properties (e.g.: country and file uploads)
          - pass-through validation operations to the mapped Form.
      properties:
        object_type:
          type: string
        uuid:
          type: string
          readOnly: true
        category:
          $ref: '#/components/schemas/CategoryEnum'
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          readOnly: true
        context:
          $ref: '#/components/schemas/ContextEnum'
        parcours_doctoral:
          type: integer
          writeOnly: true
        reference_promoter_assent:
          type: boolean
          readOnly: true
          nullable: true
        reference_promoter_comment:
          type: string
          readOnly: true
        cdd_comment:
          type: string
          readOnly: true
        can_be_submitted:
          type: boolean
          readOnly: true
        type:
          type: string
        title:
          type: string
        start_date:
          type: string
          format: date
          nullable: true
        end_date:
          type: string
          format: date
          nullable: true
        country:
          type: string
          nullable: true
        city:
          type: string
        organizing_institution:
          type: string
        hour_volume:
          type: string
        hour_volume_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/HourVolumeTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        summary:
          type: array
          items:
            type: string
        participating_proof:
          type: array
          items:
            type: string
        ects:
          type: number
          format: double
          minimum: 0
          nullable: true
      required:
      - can_be_submitted
      - category
      - cdd_comment
      - city
      - context
      - country
      - ects
      - end_date
      - hour_volume
      - hour_volume_type
      - object_type
      - organizing_institution
      - reference_promoter_assent
      - reference_promoter_comment
      - start_date
      - status
      - title
      - type
      - uuid
    SeminarCommunication:
      type: object
      description: |-
        Mixin for all activity serializers

        Aiming to
          - convert from fields to serializer
          - specify some fields' properties (e.g.: country and file uploads)
          - pass-through validation operations to the mapped Form.
      properties:
        object_type:
          type: string
        uuid:
          type: string
          readOnly: true
        category:
          $ref: '#/components/schemas/CategoryEnum'
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          readOnly: true
        context:
          $ref: '#/components/schemas/ContextEnum'
        parcours_doctoral:
          type: integer
          writeOnly: true
        reference_promoter_assent:
          type: boolean
          readOnly: true
          nullable: true
        reference_promoter_comment:
          type: string
          readOnly: true
        cdd_comment:
          type: string
          readOnly: true
        can_be_submitted:
          type: boolean
          readOnly: true
        title:
          type: string
        start_date:
          type: string
          format: date
          nullable: true
        is_online:
          type: boolean
          nullable: true
        website:
          type: string
        authors:
          type: string
        participating_proof:
          type: array
          items:
            type: string
        comment:
          type: string
        parent:
          type: string
      required:
      - authors
      - can_be_submitted
      - category
      - cdd_comment
      - comment
      - context
      - is_online
      - object_type
      - parent
      - reference_promoter_assent
      - reference_promoter_comment
      - start_date
      - status
      - title
      - uuid
      - website
    Service:
      type: object
      description: |-
        Mixin for all activity serializers

        Aiming to
          - convert from fields to serializer
          - specify some fields' properties (e.g.: country and file uploads)
          - pass-through validation operations to the mapped Form.
      properties:
        object_type:
          type: string
        uuid:
          type: string
          readOnly: true
        category:
          $ref: '#/components/schemas/CategoryEnum'
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          readOnly: true
        context:
          $ref: '#/components/schemas/ContextEnum'
        parcours_doctoral:
          type: integer
          writeOnly: true
        reference_promoter_assent:
          type: boolean
          readOnly: true
          nullable: true
        reference_promoter_comment:
          type: string
          readOnly: true
        cdd_comment:
          type: string
          readOnly: true
        can_be_submitted:
          type: boolean
          readOnly: true
        type:
          type: string
        title:
          type: string
        start_date:
          type: string
          format: date
          nullable: true
        end_date:
          type: string
          format: date
          nullable: true
        organizing_institution:
          type: string
        hour_volume:
          type: string
        participating_proof:
          type: array
          items:
            type: string
        ects:
          type: number
          format: double
          minimum: 0
          nullable: true
        comment:
          type: string
      required:
      - can_be_submitted
      - category
      - cdd_comment
      - comment
      - context
      - ects
      - end_date
      - hour_volume
      - object_type
      - organizing_institution
      - reference_promoter_assent
      - reference_promoter_comment
      - start_date
      - status
      - title
      - type
      - uuid
    StatusEnum:
      enum:
      - NON_SOUMISE
      - SOUMISE
      - ACCEPTEE
      - REFUSEE
      type: string
      description: |-
        * `NON_SOUMISE` - Non soumise
        * `SOUMISE` - Soumise
        * `ACCEPTEE` - Acceptée
        * `REFUSEE` - Refusée
    SubmitConfirmationPaperCommand:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        date:
          type: string
          format: date
        rapport_recherche:
          type: array
          items:
            type: string
        proces_verbal_ca:
          type: array
          items:
            type: string
        avis_renouvellement_mandat_recherche:
          type: array
          items:
            type: string
      required:
      - avis_renouvellement_mandat_recherche
      - date
      - proces_verbal_ca
      - rapport_recherche
    SubmitConfirmationPaperExtensionRequestCommand:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        nouvelle_echeance:
          type: string
          format: date
        justification_succincte:
          type: string
        lettre_justification:
          type: array
          items:
            type: string
      required:
      - justification_succincte
      - lettre_justification
      - nouvelle_echeance
    SupervisionCanvas:
      type: object
      properties:
        url:
          type: string
      required:
      - url
    SupervisionDTO:
      type: object
      description: |-
        A `DTOSerializer` is just a regular `Serializer`, except that:

        * A set of default fields are automatically populated from the Meta.source dataclass.
        * All fields are set to read-only if needed when Meta.read_only is True.
      properties:
        signatures_promoteurs:
          type: array
          items:
            $ref: '#/components/schemas/DetailSignaturePromoteurDTONested'
        signatures_membres_CA:
          type: array
          items:
            $ref: '#/components/schemas/DetailSignatureMembreCADTONested'
        promoteur_reference:
          type: string
      required:
      - signatures_membres_CA
      - signatures_promoteurs
    TrainingRecapPdf:
      type: object
      properties:
        url:
          type: string
      required:
      - url
    Tutor:
      type: object
      properties:
        first_name:
          type: string
          readOnly: true
        last_name:
          type: string
          readOnly: true
        global_id:
          type: string
          nullable: true
          readOnly: true
      required:
      - first_name
      - global_id
      - last_name
    TypeEnum:
      enum:
      - CONFIRMATION_PAPER
      - PRIVATE_DEFENSE
      - PUBLIC_DEFENSE
      type: string
      description: |-
        * `CONFIRMATION_PAPER` - CONFIRMATION_PAPER
        * `PRIVATE_DEFENSE` - PRIVATE_DEFENSE
        * `PUBLIC_DEFENSE` - PUBLIC_DEFENSE
    UclCourse:
      type: object
      description: |-
        Mixin for all activity serializers

        Aiming to
          - convert from fields to serializer
          - specify some fields' properties (e.g.: country and file uploads)
          - pass-through validation operations to the mapped Form.
      properties:
        object_type:
          type: string
        uuid:
          type: string
          readOnly: true
        category:
          $ref: '#/components/schemas/CategoryEnum'
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          readOnly: true
        context:
          $ref: '#/components/schemas/ContextEnum'
        parcours_doctoral:
          type: integer
          writeOnly: true
        reference_promoter_assent:
          type: boolean
          readOnly: true
          nullable: true
        reference_promoter_comment:
          type: string
          readOnly: true
        cdd_comment:
          type: string
          readOnly: true
        can_be_submitted:
          type: boolean
          readOnly: true
        learning_unit_year:
          type: string
        learning_unit_title:
          type: string
          readOnly: true
        ects:
          type: number
          format: double
          readOnly: true
        academic_year:
          type: integer
      required:
      - academic_year
      - can_be_submitted
      - category
      - cdd_comment
      - context
      - ects
      - learning_unit_title
      - learning_unit_year
      - object_type
      - reference_promoter_assent
      - reference_promoter_comment
      - status
      - uuid
    Valorisation:
      type: object
      description: |-
        Mixin for all activity serializers

        Aiming to
          - convert from fields to serializer
          - specify some fields' properties (e.g.: country and file uploads)
          - pass-through validation operations to the mapped Form.
      properties:
        object_type:
          type: string
        uuid:
          type: string
          readOnly: true
        category:
          $ref: '#/components/schemas/CategoryEnum'
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          readOnly: true
        context:
          $ref: '#/components/schemas/ContextEnum'
        parcours_doctoral:
          type: integer
          writeOnly: true
        reference_promoter_assent:
          type: boolean
          readOnly: true
          nullable: true
        reference_promoter_comment:
          type: string
          readOnly: true
        cdd_comment:
          type: string
          readOnly: true
        can_be_submitted:
          type: boolean
          readOnly: true
        title:
          type: string
        subtitle:
          type: string
        summary:
          type: array
          items:
            type: string
        participating_proof:
          type: array
          items:
            type: string
        ects:
          type: number
          format: double
          minimum: 0
          nullable: true
        comment:
          type: string
      required:
      - can_be_submitted
      - category
      - cdd_comment
      - comment
      - context
      - ects
      - object_type
      - reference_promoter_assent
      - reference_promoter_comment
      - status
      - subtitle
      - title
      - uuid
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
      - code
      - message
    AcceptedLanguageEnum:
      type: string
      enum:
      - en
      - fr-be
  securitySchemes:
    Token:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "ESB"
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
  parameters:
    X-User-FirstName:
      in: header
      name: X-User-FirstName
      schema:
        type: string
      required: false
    X-User-LastName:
      in: header
      name: X-User-LastName
      schema:
        type: string
      required: false
    X-User-Email:
      in: header
      name: X-User-Email
      schema:
        type: string
      required: false
    X-User-GlobalID:
      in: header
      name: X-User-GlobalID
      schema:
        type: string
      required: false
    Accept-Language:
      in: header
      name: Accept-Language
      description: The header advertises which languages the client is able to understand,
        and which locale variant is preferred. (By languages, we mean natural languages,
        such as English, and not programming languages.)
      schema:
        $ref: '#/components/schemas/AcceptedLanguageEnum'
      required: false
  responses:
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
servers:
- url: https://{environment}.osis.uclouvain.be/api/v1/parcours_doctoral/
  variables:
    environment:
      default: dev
      enum:
      - dev
      - qa
      - test
- url: https://osis.uclouvain.be/api/v1/parcours_doctoral/
  description: Production server
