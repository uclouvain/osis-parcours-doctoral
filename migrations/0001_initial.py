# Generated by Django 4.2.16 on 2024-11-27 15:31

import uuid

import django.core.validators
import django.db.models.deletion
import osis_document.contrib.fields
import osis_mail_template.models
import osis_signature.contrib.fields
from django.db import migrations, models

import parcours_doctoral.models.cdd_config


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("osis_async", "0005_asynctask_traceback"),
        ("base", "0707_django_4_migration"),
        ("reference", "0018_country_active"),
        ("osis_signature", "0003_external_actor"),
        ("admission", "0236_parcours_doctoral_refactoring"),
    ]

    operations = [
        migrations.CreateModel(
            name="ParcoursDoctoral",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "reference",
                    models.BigIntegerField(editable=False, unique=True, verbose_name="Reference"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created"),
                ),
                (
                    "modified_at",
                    models.DateTimeField(auto_now=True, verbose_name="Modified"),
                ),
                (
                    "proximity_commission",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ECONOMY", "ECONOMY"),
                            ("MANAGEMENT", "MANAGEMENT"),
                            (
                                "ECLI",
                                "Proximity commission for experimental and clinical research (ECLI)",
                            ),
                            (
                                "GIM",
                                "Proximity Commission for Genetics and Immunology (GIM)",
                            ),
                            ("NRSC", "Proximity Commission for Neuroscience (NRSC)"),
                            (
                                "BCM",
                                "Proximity commission for cellular and molecular biology, biochemistry (BCM)",
                            ),
                            (
                                "SPSS",
                                "Proximity commission for public health, health and society (SPSS)",
                            ),
                            ("DENT", "Proximity Commission for Dental Sciences (DENT)"),
                            (
                                "DFAR",
                                "Proximity Commission for Pharmaceutical Sciences (DFAR)",
                            ),
                            (
                                "MOTR",
                                "Proximity Commission for Motricity Sciences (MOTR)",
                            ),
                            ("PHYSICS", "PHYSICS"),
                            ("CHEMISTRY", "CHEMISTRY"),
                            ("MATHEMATICS", "MATHEMATICS"),
                            ("STATISTICS", "STATISTICS"),
                            ("BIOLOGY", "BIOLOGY"),
                            ("GEOGRAPHY", "GEOGRAPHY"),
                        ],
                        default="",
                        max_length=255,
                        verbose_name="Proximity commission",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ADMITTED", "ADMITTED"),
                            ("EN_ATTENTE_DE_SIGNATURE", "Waiting for signature"),
                            ("CONFIRMATION_SOUMISE", "CONFIRMATION_SOUMISE"),
                            ("CONFIRMATION_REUSSIE", "CONFIRMATION_REUSSIE"),
                            ("NON_AUTORISE_A_POURSUIVRE", "NON_AUTORISE_A_POURSUIVRE"),
                            (
                                "CONFIRMATION_A_REPRESENTER",
                                "CONFIRMATION_A_REPRESENTER",
                            ),
                            ("JURY_SOUMIS", "JURY_SOUMIS"),
                            ("JURY_APPROUVE_CA", "JURY_APPROUVE_CA"),
                            ("JURY_APPROUVE_CDD", "JURY_APPROUVE_CDD"),
                            ("JURY_REFUSE_CDD", "JURY_REFUSE_CDD"),
                            ("JURY_APPROUVE_ADRE", "JURY_APPROUVE_ADRE"),
                            ("JURY_REFUSE_ADRE", "JURY_REFUSE_ADRE"),
                            ("ABANDON", "ABANDON"),
                        ],
                        default="ADMITTED",
                        max_length=30,
                        verbose_name="Status",
                    ),
                ),
                (
                    "project_title",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=1023,
                        verbose_name="Project title",
                    ),
                ),
                (
                    "project_abstract",
                    models.TextField(blank=True, default="", verbose_name="Abstract"),
                ),
                (
                    "thesis_location",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="Thesis location in UCLouvain",
                    ),
                ),
                (
                    "phd_alread_started",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="Has your PhD project already started?",
                    ),
                ),
                (
                    "phd_alread_started_institute",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="Institution",
                    ),
                ),
                (
                    "work_start_date",
                    models.DateField(blank=True, null=True, verbose_name="Work start date"),
                ),
                (
                    "project_document",
                    osis_document.contrib.fields.FileField(
                        base_field=models.UUIDField(),
                        default=list,
                        size=None,
                        verbose_name="Project",
                    ),
                ),
                (
                    "gantt_graph",
                    osis_document.contrib.fields.FileField(
                        base_field=models.UUIDField(),
                        default=list,
                        size=None,
                        verbose_name="Gantt chart",
                    ),
                ),
                (
                    "program_proposition",
                    osis_document.contrib.fields.FileField(
                        base_field=models.UUIDField(),
                        default=list,
                        size=None,
                        verbose_name="Program proposition",
                    ),
                ),
                (
                    "additional_training_project",
                    osis_document.contrib.fields.FileField(
                        base_field=models.UUIDField(),
                        default=list,
                        size=None,
                        verbose_name="Complementary training proposition",
                    ),
                ),
                (
                    "recommendation_letters",
                    osis_document.contrib.fields.FileField(
                        base_field=models.UUIDField(),
                        default=list,
                        size=None,
                        verbose_name="Letters of recommendation",
                    ),
                ),
                (
                    "phd_already_done",
                    models.CharField(
                        blank=True,
                        choices=[("YES", "YES"), ("NO", "NO"), ("PARTIAL", "PARTIAL")],
                        default="NO",
                        max_length=255,
                        verbose_name="PhD already done",
                    ),
                ),
                (
                    "phd_already_done_institution",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="Institution",
                    ),
                ),
                (
                    "phd_already_done_thesis_domain",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="Thesis field",
                    ),
                ),
                (
                    "phd_already_done_defense_date",
                    models.DateField(blank=True, null=True, verbose_name="Defense"),
                ),
                (
                    "phd_already_done_no_defense_reason",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="No defense reason",
                    ),
                ),
                ("cotutelle", models.BooleanField()),
                (
                    "cotutelle_motivation",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="Motivation",
                    ),
                ),
                (
                    "cotutelle_institution_fwb",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="Institution Federation Wallonie-Bruxelles",
                    ),
                ),
                (
                    "cotutelle_institution",
                    models.UUIDField(blank=True, default=None, null=True, verbose_name="Institution"),
                ),
                (
                    "cotutelle_other_institution_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="Other institution name",
                    ),
                ),
                (
                    "cotutelle_other_institution_address",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="Other institution address",
                    ),
                ),
                (
                    "cotutelle_opening_request",
                    osis_document.contrib.fields.FileField(
                        base_field=models.UUIDField(),
                        default=list,
                        size=1,
                        verbose_name="Cotutelle request document",
                    ),
                ),
                (
                    "cotutelle_convention",
                    osis_document.contrib.fields.FileField(
                        base_field=models.UUIDField(),
                        default=list,
                        size=1,
                        verbose_name="Joint supervision agreement",
                    ),
                ),
                (
                    "cotutelle_other_documents",
                    osis_document.contrib.fields.FileField(
                        base_field=models.UUIDField(),
                        default=list,
                        size=None,
                        verbose_name="Other cotutelle-related documents",
                    ),
                ),
                (
                    "thesis_proposed_title",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="Proposed thesis title",
                    ),
                ),
                (
                    "defense_method",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "FORMULE_1",
                                "Method 1 (the private defense and the public defense are separated by at least a month",
                            ),
                            (
                                "FORMULE_2",
                                "Method 2 (The private defense and the public defense are organised the same day, and subjected to an admissibility condition)",
                            ),
                        ],
                        default="",
                        max_length=255,
                        verbose_name="Defense method",
                    ),
                ),
                (
                    "defense_indicative_date",
                    models.DateField(blank=True, null=True, verbose_name="Defense indicative date"),
                ),
                (
                    "defense_language",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("FRENCH", "French"),
                            ("ENGLISH", "English"),
                            ("OTHER", "Other"),
                            ("UNDECIDED", "Undecided"),
                        ],
                        default="UNDECIDED",
                        max_length=255,
                        verbose_name="Defense language",
                    ),
                ),
                (
                    "comment_about_jury",
                    models.TextField(blank=True, default="", verbose_name="Comment about jury"),
                ),
                ("accounting_situation", models.BooleanField(blank=True, null=True)),
                (
                    "jury_approval",
                    osis_document.contrib.fields.FileField(
                        base_field=models.UUIDField(),
                        default=list,
                        size=None,
                        verbose_name="Jury approval",
                    ),
                ),
                (
                    "financing_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("WORK_CONTRACT", "WORK_CONTRACT"),
                            ("SEARCH_SCHOLARSHIP", "SEARCH_SCHOLARSHIP"),
                            ("SELF_FUNDING", "SELF_FUNDING"),
                        ],
                        default="",
                        max_length=255,
                        verbose_name="Funding type",
                    ),
                ),
                (
                    "other_international_scholarship",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="Other international scholarship",
                    ),
                ),
                (
                    "financing_work_contract",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="Working contract type",
                    ),
                ),
                (
                    "financing_eft",
                    models.PositiveSmallIntegerField(blank=True, null=True, verbose_name="EFT"),
                ),
                (
                    "scholarship_start_date",
                    models.DateField(blank=True, null=True, verbose_name="Scholarship start date"),
                ),
                (
                    "scholarship_end_date",
                    models.DateField(blank=True, null=True, verbose_name="Scholarship end date"),
                ),
                (
                    "scholarship_proof",
                    osis_document.contrib.fields.FileField(
                        base_field=models.UUIDField(),
                        default=list,
                        size=None,
                        verbose_name="Proof of scholarship",
                    ),
                ),
                (
                    "planned_duration",
                    models.PositiveSmallIntegerField(blank=True, null=True, verbose_name="Planned duration"),
                ),
                (
                    "dedicated_time",
                    models.PositiveSmallIntegerField(blank=True, null=True, verbose_name="Dedicated time (in EFT)"),
                ),
                (
                    "is_fnrs_fria_fresh_csc_linked",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="Is your admission request linked with a FNRS, FRIA, FRESH or CSC application?",
                    ),
                ),
                (
                    "financing_comment",
                    models.TextField(blank=True, default="", verbose_name="Financing comment"),
                ),
                (
                    "admission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="admission.doctorateadmission",
                        verbose_name="Admission",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)ss",
                        to="base.person",
                        verbose_name="Student",
                    ),
                ),
                (
                    "supervision_group",
                    osis_signature.contrib.fields.SignatureProcessField(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="osis_signature.process",
                    ),
                ),
                (
                    "thesis_institute",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="base.entityversion",
                        verbose_name="Thesis institute",
                    ),
                ),
                (
                    "thesis_language",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="reference.language",
                        verbose_name="Thesis language",
                    ),
                ),
                (
                    "training",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="base.educationgroupyear",
                        verbose_name="Course",
                    ),
                ),
            ],
            options={
                "verbose_name": "Doctoral training",
                "ordering": ("-created_at",),
                "permissions": [
                    ("download_jury_approved_pdf", "Can download jury-approved PDF"),
                    ("upload_jury_approved_pdf", "Can upload jury-approved PDF"),
                    ("validate_registration", "Can validate registration"),
                    ("approve_jury", "Can approve jury"),
                    ("approve_confirmation_paper", "Can approve confirmation paper"),
                    ("validate_doctoral_training", "Can validate doctoral training"),
                    (
                        "view_admission_jury",
                        "Can view the information related to the admission jury",
                    ),
                    (
                        "change_admission_jury",
                        "Can update the information related to the admission jury",
                    ),
                    (
                        "view_confirmation",
                        "Can view the information related to the confirmation paper",
                    ),
                    (
                        "change_admission_confirmation",
                        "Can update the information related to the confirmation paper",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="ParcoursDoctoralSupervisionActor",
            fields=[
                (
                    "actor_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="osis_signature.actor",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("PROMOTER", "Supervisor"),
                            ("CA_MEMBER", "CA Member"),
                        ],
                        max_length=50,
                    ),
                ),
                ("is_doctor", models.BooleanField(default=False)),
                (
                    "internal_comment",
                    models.TextField(blank=True, default="", verbose_name="Internal comment"),
                ),
                (
                    "pdf_from_candidate",
                    osis_document.contrib.fields.FileField(
                        base_field=models.UUIDField(),
                        default=list,
                        size=1,
                        verbose_name="PDF file",
                    ),
                ),
                ("is_reference_promoter", models.BooleanField(default=False)),
            ],
            bases=("osis_signature.actor",),
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("visible", models.BooleanField(default=True)),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="base.person",
                    ),
                ),
            ],
            options={
                "verbose_name": "Role: Student",
                "verbose_name_plural": "Role: Student",
            },
        ),
        migrations.CreateModel(
            name="Promoter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("visible", models.BooleanField(default=True)),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="base.person",
                    ),
                ),
            ],
            options={
                "verbose_name": "Role: Promoter",
                "verbose_name_plural": "Role: Promoters",
            },
        ),
        migrations.CreateModel(
            name="ParcoursDoctoralTask",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            (
                                "CONFIRMATION_SUCCESS_ATTESTATION",
                                "Confirmation success attestation",
                            )
                        ],
                        max_length=32,
                    ),
                ),
                (
                    "parcours_doctoral",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="parcours_doctoral.parcoursdoctoral",
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="osis_async.asynctask",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="JurySecretary",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("visible", models.BooleanField(default=True)),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="base.person",
                    ),
                ),
            ],
            options={
                "verbose_name": "Role: Jury secretary",
                "verbose_name_plural": "Role: Jury secretaries",
            },
        ),
        migrations.CreateModel(
            name="JuryMember",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("PRESIDENT", "PRESIDENT"),
                            ("SECRETAIRE", "SECRETAIRE"),
                            ("MEMBRE", "MEMBRE"),
                        ],
                        max_length=50,
                        verbose_name="Role",
                    ),
                ),
                (
                    "other_institute",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="Other institute",
                    ),
                ),
                (
                    "institute",
                    models.CharField(blank=True, default="", max_length=255, verbose_name="Institute"),
                ),
                (
                    "last_name",
                    models.CharField(blank=True, default="", max_length=255, verbose_name="Surname"),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="First name",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("DOCTEUR", "Doctor"),
                            ("PROFESSEUR", "Professor"),
                            ("NON_DOCTEUR", "Does not have a doctor title"),
                        ],
                        default="",
                        max_length=50,
                        verbose_name="Title",
                    ),
                ),
                (
                    "non_doctor_reason",
                    models.TextField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="Non doctor reason",
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("FEMININ", "Female"),
                            ("MASCULIN", "Male"),
                            ("AUTRE", "Other"),
                        ],
                        default="",
                        max_length=50,
                        verbose_name="Gender",
                    ),
                ),
                (
                    "email",
                    models.EmailField(blank=True, default="", max_length=255, verbose_name="Email"),
                ),
                (
                    "country",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="reference.country",
                        verbose_name="Country",
                    ),
                ),
                (
                    "parcours_doctoral",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="jury_members",
                        to="parcours_doctoral.parcoursdoctoral",
                        verbose_name="Doctorate",
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="base.person",
                        verbose_name="Person",
                    ),
                ),
                (
                    "promoter",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"type": "PROMOTER"},
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="parcours_doctoral.parcoursdoctoralsupervisionactor",
                        verbose_name="Supervisor",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DoctorateReader",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("visible", models.BooleanField(default=True)),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="base.person",
                    ),
                ),
            ],
            options={
                "verbose_name": "Role: Doctorate reader",
                "verbose_name_plural": "Role: Doctorate readers",
            },
        ),
        migrations.CreateModel(
            name="ConfirmationPaper",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "confirmation_date",
                    models.DateField(blank=True, null=True, verbose_name="Confirmation exam date"),
                ),
                (
                    "confirmation_deadline",
                    models.DateField(blank=True, verbose_name="Confirmation deadline"),
                ),
                (
                    "research_report",
                    osis_document.contrib.fields.FileField(
                        base_field=models.UUIDField(),
                        default=list,
                        size=1,
                        verbose_name="Research report",
                    ),
                ),
                (
                    "supervisor_panel_report",
                    osis_document.contrib.fields.FileField(
                        base_field=models.UUIDField(),
                        default=list,
                        size=1,
                        verbose_name="Support Committee minutes",
                    ),
                ),
                (
                    "supervisor_panel_report_canvas",
                    osis_document.contrib.fields.FileField(
                        base_field=models.UUIDField(),
                        default=list,
                        size=1,
                        verbose_name="Canvas of the report of the supervisory panel",
                    ),
                ),
                (
                    "research_mandate_renewal_opinion",
                    osis_document.contrib.fields.FileField(
                        base_field=models.UUIDField(),
                        default=list,
                        size=1,
                        verbose_name="Opinion on research mandate renewal",
                    ),
                ),
                (
                    "certificate_of_failure",
                    osis_document.contrib.fields.FileField(
                        base_field=models.UUIDField(),
                        default=list,
                        size=None,
                        verbose_name="Certificate of failure",
                    ),
                ),
                (
                    "certificate_of_achievement",
                    osis_document.contrib.fields.FileField(
                        base_field=models.UUIDField(),
                        default=list,
                        size=None,
                        verbose_name="Certificate of achievement",
                    ),
                ),
                (
                    "extended_deadline",
                    models.DateField(blank=True, null=True, verbose_name="Deadline extended"),
                ),
                (
                    "cdd_opinion",
                    models.TextField(blank=True, default="", verbose_name="CDD opinion"),
                ),
                (
                    "justification_letter",
                    osis_document.contrib.fields.FileField(
                        base_field=models.UUIDField(),
                        default=list,
                        size=None,
                        verbose_name="Justification letter",
                    ),
                ),
                (
                    "brief_justification",
                    models.TextField(
                        blank=True,
                        default="",
                        max_length=2000,
                        verbose_name="Brief justification",
                    ),
                ),
                (
                    "parcours_doctoral",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="parcours_doctoral.parcoursdoctoral",
                        verbose_name="Doctorate",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CommitteeMember",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("visible", models.BooleanField(default=True)),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="base.person",
                    ),
                ),
            ],
            options={
                "verbose_name": "Role: Committee member",
                "verbose_name_plural": "Role: Committee members",
            },
        ),
        migrations.CreateModel(
            name="CddMailTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "identifier",
                    models.CharField(
                        choices=[
                            (
                                "osis-admission-generic-admitted",
                                "osis-admission-generic-admitted",
                            ),
                            (
                                "osis-parcours-doctoral-confirmation-info-student",
                                "osis-parcours-doctoral-confirmation-info-student",
                            ),
                            (
                                "osis-parcours-doctoral-confirmation-on-failure-student",
                                "osis-parcours-doctoral-confirmation-on-failure-student",
                            ),
                            (
                                "osis-parcours-doctoral-confirmation-on-retaking-student",
                                "osis-parcours-doctoral-confirmation-on-retaking-student",
                            ),
                        ],
                        max_length=255,
                        validators=[osis_mail_template.models.check_mail_template_identifier],
                        verbose_name="Identifier",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Name")),
                (
                    "language",
                    models.CharField(
                        choices=[("fr-be", "French"), ("en", "English")],
                        max_length=25,
                        verbose_name="Language",
                    ),
                ),
                ("subject", models.CharField(max_length=255, verbose_name="Subject")),
                ("body", models.TextField(verbose_name="Body")),
                (
                    "cdd",
                    models.ForeignKey(
                        limit_choices_to={"organization__type": "MAIN"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="base.entity",
                    ),
                ),
            ],
            options={
                "verbose_name": "CDD Mail template",
                "verbose_name_plural": "CDD Mail templates",
            },
        ),
        migrations.CreateModel(
            name="CddConfigurator",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("visible", models.BooleanField(default=True)),
                ("with_child", models.BooleanField(default=False)),
                (
                    "entity",
                    models.ForeignKey(
                        limit_choices_to={"organization__type": "MAIN"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="base.entity",
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="base.person",
                    ),
                ),
            ],
            options={
                "verbose_name": "Role: CDD configurator",
                "verbose_name_plural": "Role: CDD configurators",
            },
        ),
        migrations.CreateModel(
            name="CddConfiguration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_complementary_training_enabled",
                    models.BooleanField(
                        default=False,
                        help_text='This adds a "Complementary training" tab on admissions concerning this CDD.',
                        verbose_name="Enable complementary training tab",
                    ),
                ),
                (
                    "category_labels",
                    parcours_doctoral.models.cdd_config.TranslatedMultilineField(
                        default=parcours_doctoral.models.cdd_config.default_category_labels,
                        verbose_name="Category labels",
                    ),
                ),
                (
                    "conference_types",
                    parcours_doctoral.models.cdd_config.TranslatedMultilineField(
                        default=parcours_doctoral.models.cdd_config.default_conference_types,
                        verbose_name="CONFERENCE types",
                    ),
                ),
                (
                    "conference_publication_types",
                    parcours_doctoral.models.cdd_config.TranslatedMultilineField(
                        default=parcours_doctoral.models.cdd_config.default_conference_publication_types,
                        verbose_name="CONFERENCE PUBLICATION types",
                    ),
                ),
                (
                    "communication_types",
                    parcours_doctoral.models.cdd_config.TranslatedMultilineField(
                        default=parcours_doctoral.models.cdd_config.default_communication_types,
                        verbose_name="COMMUNICATION types",
                    ),
                ),
                (
                    "seminar_types",
                    parcours_doctoral.models.cdd_config.TranslatedMultilineField(
                        default=parcours_doctoral.models.cdd_config.default_seminar_types,
                        verbose_name="SEMINAR types",
                    ),
                ),
                (
                    "publication_types",
                    parcours_doctoral.models.cdd_config.TranslatedMultilineField(
                        default=parcours_doctoral.models.cdd_config.default_publication_types,
                        verbose_name="PUBLICATION types",
                    ),
                ),
                (
                    "service_types",
                    parcours_doctoral.models.cdd_config.TranslatedMultilineField(
                        default=parcours_doctoral.models.cdd_config.default_service_types,
                        verbose_name="SERVICE types",
                    ),
                ),
                (
                    "residency_types",
                    parcours_doctoral.models.cdd_config.TranslatedMultilineField(
                        default=parcours_doctoral.models.cdd_config.default_residency_types,
                        verbose_name="RESIDENCY types",
                    ),
                ),
                (
                    "course_types",
                    parcours_doctoral.models.cdd_config.TranslatedMultilineField(
                        default=parcours_doctoral.models.cdd_config.default_course_types,
                        verbose_name="COURSE types",
                    ),
                ),
                (
                    "complementary_course_types",
                    parcours_doctoral.models.cdd_config.TranslatedMultilineField(
                        default=parcours_doctoral.models.cdd_config.default_complementary_course_types,
                        verbose_name="COURSE types for complementary training",
                    ),
                ),
                (
                    "cdd",
                    models.OneToOneField(
                        limit_choices_to={"organization__type": "MAIN"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="doctorate_config",
                        to="base.entity",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AdreSecretary",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("visible", models.BooleanField(default=True)),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="base.person",
                    ),
                ),
            ],
            options={
                "verbose_name": "Role: ADRE secretary",
                "verbose_name_plural": "Role: ADRE Secretaries",
            },
        ),
        migrations.CreateModel(
            name="Activity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "context",
                    models.CharField(
                        choices=[
                            ("DOCTORAL_TRAINING", "DOCTORAL_TRAINING"),
                            ("COMPLEMENTARY_TRAINING", "COMPLEMENTARY_TRAINING"),
                            ("FREE_COURSE", "FREE_COURSE"),
                        ],
                        default="DOCTORAL_TRAINING",
                        max_length=30,
                        verbose_name="Context",
                    ),
                ),
                (
                    "ects",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        default=0,
                        help_text="Consult the credits grid released by your domain doctoral commission. Refer to the website of your commission for more details.",
                        max_digits=3,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="ECTS credits",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("NON_SOUMISE", "NON_SOUMISE"),
                            ("SOUMISE", "SOUMISE"),
                            ("ACCEPTEE", "ACCEPTEE"),
                            ("REFUSEE", "REFUSEE"),
                        ],
                        default="NON_SOUMISE",
                        max_length=20,
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("CONFERENCE", "CONFERENCE"),
                            ("COMMUNICATION", "COMMUNICATION"),
                            ("SEMINAR", "SEMINAR"),
                            ("PUBLICATION", "PUBLICATION"),
                            ("SERVICE", "SERVICE"),
                            ("RESIDENCY", "RESIDENCY"),
                            ("VAE", "VAE"),
                            ("COURSE", "COURSE"),
                            ("PAPER", "PAPER"),
                            ("UCL_COURSE", "UCL_COURSE"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=100,
                        verbose_name="Activity type",
                    ),
                ),
                (
                    "title",
                    models.CharField(blank=True, default="", max_length=200, verbose_name="Title"),
                ),
                (
                    "participating_proof",
                    osis_document.contrib.fields.FileField(
                        base_field=models.UUIDField(),
                        blank=True,
                        default=list,
                        size=1,
                        verbose_name="Participation certification",
                    ),
                ),
                (
                    "comment",
                    models.TextField(blank=True, default="", verbose_name="Comment"),
                ),
                (
                    "start_date",
                    models.DateField(blank=True, null=True, verbose_name="Activity begin date"),
                ),
                (
                    "end_date",
                    models.DateField(blank=True, null=True, verbose_name="Activity end date"),
                ),
                (
                    "participating_days",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=3,
                        null=True,
                        verbose_name="Number of days participating",
                    ),
                ),
                (
                    "is_online",
                    models.BooleanField(
                        blank=True,
                        choices=[(False, "In person"), (True, "Online")],
                        default=None,
                        null=True,
                        verbose_name="Online event",
                    ),
                ),
                (
                    "city",
                    models.CharField(blank=True, default="", max_length=100, verbose_name="City"),
                ),
                (
                    "organizing_institution",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=100,
                        verbose_name="Organising institution",
                    ),
                ),
                (
                    "website",
                    models.URLField(blank=True, default="", verbose_name="Website"),
                ),
                (
                    "committee",
                    models.CharField(
                        blank=True,
                        choices=[("YES", "YES"), ("NO", "NO"), ("NA", "N/A")],
                        default="",
                        max_length=100,
                    ),
                ),
                (
                    "dial_reference",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=100,
                        verbose_name="Reference DIAL.Pr",
                    ),
                ),
                (
                    "acceptation_proof",
                    osis_document.contrib.fields.FileField(
                        base_field=models.UUIDField(),
                        blank=True,
                        default=list,
                        size=1,
                        verbose_name="Participation certification",
                    ),
                ),
                (
                    "summary",
                    osis_document.contrib.fields.FileField(
                        base_field=models.UUIDField(),
                        blank=True,
                        default=list,
                        size=1,
                        verbose_name="Summary",
                    ),
                ),
                (
                    "subtype",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=100,
                        verbose_name="Activity subtype",
                    ),
                ),
                ("subtitle", models.TextField(blank=True, default="")),
                (
                    "authors",
                    models.CharField(blank=True, default="", max_length=100, verbose_name="Authors"),
                ),
                (
                    "role",
                    models.CharField(blank=True, default="", max_length=100, verbose_name="Role"),
                ),
                (
                    "keywords",
                    models.CharField(blank=True, default="", max_length=100, verbose_name="Keywords"),
                ),
                (
                    "journal",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=100,
                        verbose_name="Journal or publishing house name",
                    ),
                ),
                (
                    "publication_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("UNSUBMITTED", "Unsubmitted for publication"),
                            ("SUBMITTED", "Submitted for publication"),
                            ("IN_REVIEW", "Awaiting approval"),
                            ("ACCEPTED", "Accepted"),
                            ("PUBLISHED", "Published"),
                        ],
                        default="",
                        max_length=100,
                    ),
                ),
                (
                    "hour_volume",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=100,
                        verbose_name="Total hourly volume",
                    ),
                ),
                ("course_completed", models.BooleanField(blank=True, default=False)),
                (
                    "reference_promoter_assent",
                    models.BooleanField(null=True, verbose_name="Lead supervisor assent"),
                ),
                (
                    "reference_promoter_comment",
                    models.TextField(default="", verbose_name="Lead supervisor comment"),
                ),
                (
                    "cdd_comment",
                    models.TextField(default="", verbose_name="CDD manager comment"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "modified_at",
                    models.DateTimeField(auto_now=True, verbose_name="Modified at"),
                ),
                (
                    "can_be_submitted",
                    models.BooleanField(default=False, verbose_name="Can be submitted"),
                ),
                (
                    "country",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="reference.country",
                        verbose_name="Country",
                    ),
                ),
                (
                    "learning_unit_year",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="base.learningunityear",
                    ),
                ),
                (
                    "parcours_doctoral",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="parcours_doctoral.parcoursdoctoral",
                        verbose_name="Doctorate",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="parcours_doctoral.activity",
                    ),
                ),
            ],
            options={
                "verbose_name": "Training activity",
                "verbose_name_plural": "Training activities",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddConstraint(
            model_name="jurymember",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("promoter__isnull", False),
                        ("person__isnull", True),
                        ("institute", ""),
                        ("other_institute", ""),
                        ("country__isnull", True),
                        ("last_name", ""),
                        ("first_name", ""),
                        ("title", ""),
                        ("gender", ""),
                        ("email", ""),
                    ),
                    models.Q(
                        ("promoter__isnull", True),
                        ("person__isnull", False),
                        ("institute", ""),
                        ("country__isnull", True),
                        ("last_name", ""),
                        ("first_name", ""),
                        ("title", ""),
                        ("gender", ""),
                        ("email", ""),
                    ),
                    models.Q(
                        ("promoter__isnull", True),
                        ("person__isnull", True),
                        models.Q(("institute", ""), _negated=True),
                        ("country__isnull", False),
                        models.Q(("last_name", ""), _negated=True),
                        models.Q(("first_name", ""), _negated=True),
                        models.Q(("title", ""), _negated=True),
                        models.Q(("gender", ""), _negated=True),
                        models.Q(("email", ""), _negated=True),
                    ),
                    _connector="OR",
                ),
                name="admission_jurymember_constraint",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="cddmailtemplate",
            unique_together={("identifier", "language", "cdd", "name")},
        ),
    ]
